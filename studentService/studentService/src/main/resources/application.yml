spring:
  application:
    name: "studentService"
  profiles:
    active: "default"
  config:
    import: "optional:configserver:http://localhost:8071/"
  datasource:
    url: jdbc:postgresql://localhost:5433/studentService
    username: postgres
    password: imad
    driver-class-name: org.postgresql.Driver
    jpa:
      hibernate:
        ddl-auto: update
      show-sql: true
      properties:
        hibernate:
          format_sql: true
      database: postgresql
      database-platform: org.hibernate.dialect.PostgreSQLDialect
    main:
      banner-mode: off




management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  health:
    liveness-state:
    enabled: true
    readiness-state:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints :
  shutdown :
    enabled : true

eureka :
  instance:
    prefer-ip-address: true
  client :
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/


resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 5
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
